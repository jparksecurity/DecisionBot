// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { JobJobConfig, jobJobConfig, jobJobConfigRequest, jobJobConfigResponse } from './job-job-config';

/**
 * The shape of the model inside the application code - what the users use
 */
export const jobsCustomerRunJobRequest2 = z.lazy(() => {
  return z.object({
    config: jobJobConfig.optional(),
  });
});

/**
 *
 * @typedef  {JobsCustomerRunJobRequest2} jobsCustomerRunJobRequest2
 * @property {JobJobConfig}
 */
export type JobsCustomerRunJobRequest2 = z.infer<typeof jobsCustomerRunJobRequest2>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsCustomerRunJobRequest2Response = z.lazy(() => {
  return z
    .object({
      config: jobJobConfigResponse.optional(),
    })
    .transform((data) => ({
      config: data['config'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsCustomerRunJobRequest2Request = z.lazy(() => {
  return z
    .object({
      config: jobJobConfigRequest.optional(),
    })
    .transform((data) => ({
      config: data['config'],
    }));
});
