// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  CommonPaginatedResponse,
  commonPaginatedResponse,
  commonPaginatedResponseRequest,
  commonPaginatedResponseResponse,
} from './common-paginated-response';
import { JobJob, jobJob, jobJobRequest, jobJobResponse } from './job-job';

/**
 * The shape of the model inside the application code - what the users use
 */
export const jobsJobsResponse = z.lazy(() => {
  return z.object({
    pagination: commonPaginatedResponse.optional(),
    data: z.array(jobJob).optional(),
  });
});

/**
 *
 * @typedef  {JobsJobsResponse} jobsJobsResponse
 * @property {CommonPaginatedResponse} - This section provides information about how the results are divided into pages.
 * @property {JobJob[]}
 */
export type JobsJobsResponse = z.infer<typeof jobsJobsResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsJobsResponseResponse = z.lazy(() => {
  return z
    .object({
      pagination: commonPaginatedResponseResponse.optional(),
      data: z.array(jobJobResponse).optional(),
    })
    .transform((data) => ({
      pagination: data['pagination'],
      data: data['data'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsJobsResponseRequest = z.lazy(() => {
  return z
    .object({
      pagination: commonPaginatedResponseRequest.optional(),
      data: z.array(jobJobRequest).optional(),
    })
    .transform((data) => ({
      pagination: data['pagination'],
      data: data['data'],
    }));
});
