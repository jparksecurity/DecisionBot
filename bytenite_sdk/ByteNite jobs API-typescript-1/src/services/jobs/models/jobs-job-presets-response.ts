// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { JobsJobPreset, jobsJobPreset, jobsJobPresetRequest, jobsJobPresetResponse } from './jobs-job-preset';

/**
 * The shape of the model inside the application code - what the users use
 */
export const jobsJobPresetsResponse = z.lazy(() => {
  return z.object({
    presets: z.array(jobsJobPreset).optional(),
  });
});

/**
 *
 * @typedef  {JobsJobPresetsResponse} jobsJobPresetsResponse
 * @property {JobsJobPreset[]}
 */
export type JobsJobPresetsResponse = z.infer<typeof jobsJobPresetsResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsJobPresetsResponseResponse = z.lazy(() => {
  return z
    .object({
      presets: z.array(jobsJobPresetResponse).optional(),
    })
    .transform((data) => ({
      presets: data['presets'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsJobPresetsResponseRequest = z.lazy(() => {
  return z
    .object({
      presets: z.array(jobsJobPresetRequest).optional(),
    })
    .transform((data) => ({
      presets: data['presets'],
    }));
});
