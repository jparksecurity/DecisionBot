// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const jobsJobPreset = z.lazy(() => {
  return z.object({
    id: z.string().optional(),
    name: z.string().optional(),
    category: z.string().optional(),
    description: z.string().optional(),
    jobTemplateId: z.string().optional(),
    params: z.any().optional(),
  });
});

/**
 *
 * @typedef  {JobsJobPreset} jobsJobPreset
 * @property {string}
 * @property {string}
 * @property {string}
 * @property {string}
 * @property {string}
 * @property {any}
 */
export type JobsJobPreset = z.infer<typeof jobsJobPreset>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsJobPresetResponse = z.lazy(() => {
  return z
    .object({
      id: z.string().optional(),
      name: z.string().optional(),
      category: z.string().optional(),
      description: z.string().optional(),
      jobTemplateId: z.string().optional(),
      params: z.any().optional(),
    })
    .transform((data) => ({
      id: data['id'],
      name: data['name'],
      category: data['category'],
      description: data['description'],
      jobTemplateId: data['jobTemplateId'],
      params: data['params'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const jobsJobPresetRequest = z.lazy(() => {
  return z
    .object({
      id: z.string().optional(),
      name: z.string().optional(),
      category: z.string().optional(),
      description: z.string().optional(),
      jobTemplateId: z.string().optional(),
      params: z.any().optional(),
    })
    .transform((data) => ({
      id: data['id'],
      name: data['name'],
      category: data['category'],
      description: data['description'],
      jobTemplateId: data['jobTemplateId'],
      params: data['params'],
    }));
});
