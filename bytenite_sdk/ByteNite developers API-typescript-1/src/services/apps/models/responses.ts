// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { ByteniteappApp, byteniteappApp, byteniteappAppRequest, byteniteappAppResponse } from './byteniteapp-app';

/**
 * The shape of the model inside the application code - what the users use
 */
export const responses = z.lazy(() => {
  return z.object({
    app: byteniteappApp.optional(),
  });
});

/**
 *
 * @typedef  {Responses} responses
 * @property {ByteniteappApp}
 */
export type Responses = z.infer<typeof responses>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const responsesResponse = z.lazy(() => {
  return z
    .object({
      app: byteniteappAppResponse.optional(),
    })
    .transform((data) => ({
      app: data['app'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const responsesRequest = z.lazy(() => {
  return z
    .object({
      app: byteniteappAppRequest.optional(),
    })
    .transform((data) => ({
      app: data['app'],
    }));
});
