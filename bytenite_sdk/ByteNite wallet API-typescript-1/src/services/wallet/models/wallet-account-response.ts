// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { DataStructures, dataStructures, dataStructuresRequest, dataStructuresResponse } from './data-structures';

/**
 * The shape of the model inside the application code - what the users use
 */
export const walletAccountResponse = z.lazy(() => {
  return z.object({
    account: dataStructures.optional(),
  });
});

/**
 *
 * @typedef  {WalletAccountResponse} walletAccountResponse
 * @property {DataStructures}
 */
export type WalletAccountResponse = z.infer<typeof walletAccountResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const walletAccountResponseResponse = z.lazy(() => {
  return z
    .object({
      account: dataStructuresResponse.optional(),
    })
    .transform((data) => ({
      account: data['account'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const walletAccountResponseRequest = z.lazy(() => {
  return z
    .object({
      account: dataStructuresRequest.optional(),
    })
    .transform((data) => ({
      account: data['account'],
    }));
});
