// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const walletCardDetails = z.lazy(() => {
  return z.object({
    id: z.string().optional(),
    brand: z.string().optional(),
    last4: z.string().optional(),
    expMonth: z.number().optional(),
    expYear: z.number().optional(),
  });
});

/**
 *
 * @typedef  {WalletCardDetails} walletCardDetails
 * @property {string} - A unique identifier for the card.
 * @property {string} - Brand name of the card (e.g., Visa, MasterCard).
 * @property {string} - The last four digits of the card number.
 * @property {number} - The expiration month of the card.
 * @property {number} - The expiration year of the card.
 */
export type WalletCardDetails = z.infer<typeof walletCardDetails>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const walletCardDetailsResponse = z.lazy(() => {
  return z
    .object({
      id: z.string().optional(),
      brand: z.string().optional(),
      last4: z.string().optional(),
      expMonth: z.number().optional(),
      expYear: z.number().optional(),
    })
    .transform((data) => ({
      id: data['id'],
      brand: data['brand'],
      last4: data['last4'],
      expMonth: data['expMonth'],
      expYear: data['expYear'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const walletCardDetailsRequest = z.lazy(() => {
  return z
    .object({
      id: z.string().optional(),
      brand: z.string().optional(),
      last4: z.string().optional(),
      expMonth: z.number().optional(),
      expYear: z.number().optional(),
    })
    .transform((data) => ({
      id: data['id'],
      brand: data['brand'],
      last4: data['last4'],
      expMonth: data['expMonth'],
      expYear: data['expYear'],
    }));
});
