// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  WalletPayoutRequest,
  walletPayoutRequest,
  walletPayoutRequestRequest,
  walletPayoutRequestResponse,
} from './wallet-payout-request';

/**
 * The shape of the model inside the application code - what the users use
 */
export const walletRequirePayoutResponse = z.lazy(() => {
  return z.object({
    payoutRequest: walletPayoutRequest.optional(),
  });
});

/**
 *
 * @typedef  {WalletRequirePayoutResponse} walletRequirePayoutResponse
 * @property {WalletPayoutRequest}
 */
export type WalletRequirePayoutResponse = z.infer<typeof walletRequirePayoutResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const walletRequirePayoutResponseResponse = z.lazy(() => {
  return z
    .object({
      payoutRequest: walletPayoutRequestResponse.optional(),
    })
    .transform((data) => ({
      payoutRequest: data['payoutRequest'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const walletRequirePayoutResponseRequest = z.lazy(() => {
  return z
    .object({
      payoutRequest: walletPayoutRequestRequest.optional(),
    })
    .transform((data) => ({
      payoutRequest: data['payoutRequest'],
    }));
});
