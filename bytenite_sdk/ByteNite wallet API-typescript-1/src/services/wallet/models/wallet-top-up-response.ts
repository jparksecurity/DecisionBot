// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  WalletTopUpRequest,
  walletTopUpRequest,
  walletTopUpRequestRequest,
  walletTopUpRequestResponse,
} from './wallet-top-up-request';
import {
  WalletCardDetails,
  walletCardDetails,
  walletCardDetailsRequest,
  walletCardDetailsResponse,
} from './wallet-card-details';

/**
 * The shape of the model inside the application code - what the users use
 */
export const walletTopUpResponse = z.lazy(() => {
  return z.object({
    topUpRequest: walletTopUpRequest.optional(),
    clientSecret: z.string().optional(),
    cardDetails: z.array(walletCardDetails).optional(),
  });
});

/**
 *
 * @typedef  {WalletTopUpResponse} walletTopUpResponse
 * @property {WalletTopUpRequest}
 * @property {string} - A unique secret key used to confirm the payment on the client side.
 * @property {WalletCardDetails[]}
 */
export type WalletTopUpResponse = z.infer<typeof walletTopUpResponse>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const walletTopUpResponseResponse = z.lazy(() => {
  return z
    .object({
      topUpRequest: walletTopUpRequestResponse.optional(),
      clientSecret: z.string().optional(),
      cardDetails: z.array(walletCardDetailsResponse).optional(),
    })
    .transform((data) => ({
      topUpRequest: data['topUpRequest'],
      clientSecret: data['clientSecret'],
      cardDetails: data['cardDetails'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const walletTopUpResponseRequest = z.lazy(() => {
  return z
    .object({
      topUpRequest: walletTopUpRequestRequest.optional(),
      clientSecret: z.string().optional(),
      cardDetails: z.array(walletCardDetailsRequest).optional(),
    })
    .transform((data) => ({
      topUpRequest: data['topUpRequest'],
      clientSecret: data['clientSecret'],
      cardDetails: data['cardDetails'],
    }));
});
