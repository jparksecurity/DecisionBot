// This file was generated by liblab | https://liblab.com/

import { Environment } from './http/environment';
import { SdkConfig } from './http/types';
import { AuthService } from './services/auth';
import { ApiKeysService } from './services/api-keys';
import { InfoService } from './services/info';
import { SecretsService } from './services/secrets';
import { UserService } from './services/user';

export * from './services/auth';
export * from './services/api-keys';
export * from './services/info';
export * from './services/secrets';
export * from './services/user';
export * from './services/common';

export * from './http';
export { Environment } from './http/environment';

export class ByteNiteAuthApi {
  public readonly auth: AuthService;

  public readonly apiKeys: ApiKeysService;

  public readonly info: InfoService;

  public readonly secrets: SecretsService;

  public readonly user: UserService;

  constructor(public config: SdkConfig) {
    this.auth = new AuthService(this.config);

    this.apiKeys = new ApiKeysService(this.config);

    this.info = new InfoService(this.config);

    this.secrets = new SecretsService(this.config);

    this.user = new UserService(this.config);
  }

  set baseUrl(baseUrl: string) {
    this.auth.baseUrl = baseUrl;
    this.apiKeys.baseUrl = baseUrl;
    this.info.baseUrl = baseUrl;
    this.secrets.baseUrl = baseUrl;
    this.user.baseUrl = baseUrl;
  }

  set environment(environment: Environment) {
    this.auth.baseUrl = environment;
    this.apiKeys.baseUrl = environment;
    this.info.baseUrl = environment;
    this.secrets.baseUrl = environment;
    this.user.baseUrl = environment;
  }

  set timeoutMs(timeoutMs: number) {
    this.auth.timeoutMs = timeoutMs;
    this.apiKeys.timeoutMs = timeoutMs;
    this.info.timeoutMs = timeoutMs;
    this.secrets.timeoutMs = timeoutMs;
    this.user.timeoutMs = timeoutMs;
  }

  set token(token: string) {
    this.auth.token = token;
    this.apiKeys.token = token;
    this.info.token = token;
    this.secrets.token = token;
    this.user.token = token;
  }

  set apiKey(apiKey: string) {
    this.auth.apiKey = apiKey;
    this.apiKeys.apiKey = apiKey;
    this.info.apiKey = apiKey;
    this.secrets.apiKey = apiKey;
    this.user.apiKey = apiKey;
  }

  set apiKeyHeader(apiKeyHeader: string) {
    this.auth.apiKeyHeader = apiKeyHeader;
    this.apiKeys.apiKeyHeader = apiKeyHeader;
    this.info.apiKeyHeader = apiKeyHeader;
    this.secrets.apiKeyHeader = apiKeyHeader;
    this.user.apiKeyHeader = apiKeyHeader;
  }
}

// c029837e0e474b76bc487506e8799df5e3335891efe4fb02bda7a1441840310c
