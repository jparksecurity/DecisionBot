// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const authAccessTokenRequest = z.lazy(() => {
  return z.object({
    apiKey: z.string(),
  });
});

/**
 *
 * @typedef  {AuthAccessTokenRequest} authAccessTokenRequest
 * @property {string} - The actual API key that you have received from the API key request.
 */
export type AuthAccessTokenRequest = z.infer<typeof authAccessTokenRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const authAccessTokenRequestResponse = z.lazy(() => {
  return z
    .object({
      apiKey: z.string(),
    })
    .transform((data) => ({
      apiKey: data['apiKey'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const authAccessTokenRequestRequest = z.lazy(() => {
  return z
    .object({
      apiKey: z.string(),
    })
    .transform((data) => ({
      apiKey: data['apiKey'],
    }));
});
